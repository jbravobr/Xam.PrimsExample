{"Name":"XMessageControl","Id":1768,"Alias":"XMessageControl","Description":"About XMessageControl\r\n======================\r\n`XMessageControl` is a Xamarin.Forms component which can be used to show messages in all 3 platforms.\r\nThis component mainly has two methods to show messages in different ways:\r\n\r\n1) \"ShowMessage\" - User can use this method to show varity of messages. For example, you can define your message to be success, error, warning or info.\r\n\r\n2) \"ShowToast\" - User can use this method to show toast like Android style toast.\r\n\r\n###XMessageControl Features:\r\n\r\n- Four default message types:\r\n\r\n   \t1.Success (Default colour: green)\r\n   \t2.Error (Default colour: red)\r\n   \t3.Warning  (Default colour: orange)\r\n   \t4.Info (Default colour: blue)\r\n   \t\r\n\r\n-  Customisable Message icon, Background and Forground \r\n- Callback Support for dismissed message\r\n- Android style toast notification messsage support.","Version":"1.1","Summary":"Cross Platform control to show messages with type like success, error, warning, info and also to show android style toast messages.","QuickStart":"\nYou can add an `XMessageControl` as shown in the following example.  \n  \n#Example  \n\nFollow the steps below to create a Xamarin.Forms PCL solution which will use the `XMessageControl` control.  \n  \n1. Create a new Xamarin.Forms Portable solution that includes Android, iOS and windows phone and PCL projects.    \n  \n2. Add the `XMessageControl` component/dll to your PCL project.  \n  \n3. Create XAML page with below XAML and Code behind. (Change sample Page name with your new page)\n    \nDESIGN-TIME XAML MARKUP (*XMessageControldemoPage.xaml* file)  \n  \n```\n\t\u003cContentPage xmlns=\"http://xamarin.com/schemas/2014/forms\"\n\t             xmlns:x=\"http://schemas.microsoft.com/winfx/2009/xaml\"\n\t             x:Class=\"XMessageControl.XMessageControldemoPage\" \u003e\n\t\t\u003cStackLayout VerticalOptions=\"Center\" Padding=\"20\" \u003e\n\t       \u003cButton Text=\"Show Message\" x:Name=\"btnmessage\"\u003e\u003c/Button\u003e\n\t\t    \u003cButton Text=\"Show Toast\" x:Name=\"btnmessagetaost\"\u003e\u003c/Button\u003e\n\t\t\u003c/StackLayout\u003e\n\t\u003c/ContentPage\u003e\n ``` \n\nC# CODE BEHIND (*XMessageControldemoPage.xaml.cs* file)\n\n ``` \n\tusing Softweb.Xamarin.Forms.Controls;\n\t\n\tpublic partial class XMessageControldemoPage : ContentPage\n\t\t{\n\t\t\tpublic XMessageControldemoPage ()\n\t\t\t{\n\t\t        btnmessage.Clicked += (object sender, EventArgs e) =\u003e {\n\t\t\t\t\tUIMessage.ShowMessage (\"Customization\", \"Hey! You Clicked on Button\", MessageControl.MessageTypes.Warning, \"validation.png\", Color.Pink, Color.Black, true, OnDissmissControl);\n\t\t\t\t};\n\t\t\t\tbtnmessagetaost.Clicked += (object sender, EventArgs e) =\u003e {\n\t\t\t\t   UIMessage.ShowToast (\"Hi!Customized Toast Message.\\nThis is First toast Message with top postion\", ToastMessage.ToastPosition.TOP, ToastMessage.Duration.Short, \"validation.png\", Color.Red);\n\t\t\t       UIMessage.ShowToast (\"Hi!Test Message\", ToastMessage.ToastPosition.CENTER);\n\t\t\t\t   UIMessage.ShowToast (\"Hi!Test Message\", ToastMessage.ToastPosition.BOTTOM, ToastMessage.Duration.Short);\n\t\t\t\t};\n\t    \t}\n\t\t\tpublic void OnDissmissControl ()\n\t\t\t{\n\t\t\t\tDisplayAlert (\"Message\", \"HI\", \"OK\");\n\t\t\t}\n\t\t}\t\n```","Hash":"fb81aae92548e72e721bc55027c6d961","TargetPlatforms":["ios","android"],"TrialHash":null}